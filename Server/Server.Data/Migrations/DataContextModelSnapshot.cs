// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

namespace Server.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Models.Castles.Castle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvatarId");

                    b.Property<int?>("BlueprintId");

                    b.Property<int?>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("RegionId");

                    b.ToTable("Castles");
                });

            modelBuilder.Entity("Server.Models.Castles.CastleBlueprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CastleBlueprints");
                });

            modelBuilder.Entity("Server.Models.Heroes.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<int?>("AvatarId");

                    b.Property<int?>("BlueprintId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Defence");

                    b.Property<int>("Dodge");

                    b.Property<int>("Health");

                    b.Property<DateTime>("LastActivity");

                    b.Property<int>("Level");

                    b.Property<int>("Magic");

                    b.Property<int>("MagicPower");

                    b.Property<int>("MagicResistance");

                    b.Property<int>("MaxDamage");

                    b.Property<int>("MinDamage");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("PersonalAttack");

                    b.Property<int>("PersonalDefense");

                    b.Property<int?>("RegionId");

                    b.Property<long>("TimePlayedTicks");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("RegionId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Server.Models.Heroes.HeroBlueprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<int>("Class");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Defense");

                    b.Property<string>("Description");

                    b.Property<int>("Dodge");

                    b.Property<int>("Faction");

                    b.Property<int>("Health");

                    b.Property<int>("Magic");

                    b.Property<int>("MagicPower");

                    b.Property<int>("MagicResistance");

                    b.Property<int>("MaxDamage");

                    b.Property<int>("MinDamage");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("PersonalAttack");

                    b.Property<int>("PersonalDefense");

                    b.Property<string>("PortraitImgUrl");

                    b.HasKey("Id");

                    b.ToTable("HeroBlueprints");
                });

            modelBuilder.Entity("Server.Models.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlueprintId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int?>("HeroId");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("HeroId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Server.Models.Items.ItemBlueprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<int>("ItemSlotType");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ItemBlueprints");
                });

            modelBuilder.Entity("Server.Models.Realms.Realm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<DateTime>("ResetDate");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Realms");
                });

            modelBuilder.Entity("Server.Models.Realms.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Level");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int?>("RealmId");

                    b.HasKey("Id");

                    b.HasIndex("RealmId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Server.Models.Users.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Gems");

                    b.Property<int>("Gold");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("Ore");

                    b.Property<int?>("RealmId");

                    b.Property<int?>("UserId");

                    b.Property<int>("Wood");

                    b.HasKey("Id");

                    b.HasIndex("RealmId");

                    b.HasIndex("UserId");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("Server.Models.Users.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DateRead");

                    b.Property<bool>("IsRead");

                    b.Property<DateTime>("MessageSent");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool>("RecipientDeleted");

                    b.Property<int?>("RecipientId");

                    b.Property<bool>("SenderDeleted");

                    b.Property<int?>("SenderId");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Server.Models.Users.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Server.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("CurrentRealmId");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<string>("Interests");

                    b.Property<DateTime>("LastActive");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSald");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Models.Castles.Castle", b =>
                {
                    b.HasOne("Server.Models.Users.Avatar")
                        .WithMany("Castles")
                        .HasForeignKey("AvatarId");

                    b.HasOne("Server.Models.Castles.CastleBlueprint", "Blueprint")
                        .WithMany()
                        .HasForeignKey("BlueprintId");

                    b.HasOne("Server.Models.Realms.Region", "Region")
                        .WithMany("Castles")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Server.Models.Heroes.Hero", b =>
                {
                    b.HasOne("Server.Models.Users.Avatar", "Avatar")
                        .WithMany("Heroes")
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Server.Models.Heroes.HeroBlueprint", "Blueprint")
                        .WithMany()
                        .HasForeignKey("BlueprintId");

                    b.HasOne("Server.Models.Realms.Region", "Region")
                        .WithMany("Heroes")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Server.Models.Items.Item", b =>
                {
                    b.HasOne("Server.Models.Items.ItemBlueprint", "Blueprint")
                        .WithMany()
                        .HasForeignKey("BlueprintId");

                    b.HasOne("Server.Models.Heroes.Hero", "Hero")
                        .WithMany("Items")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Server.Models.Realms.Region", b =>
                {
                    b.HasOne("Server.Models.Realms.Realm", "Realm")
                        .WithMany("Regions")
                        .HasForeignKey("RealmId");
                });

            modelBuilder.Entity("Server.Models.Users.Avatar", b =>
                {
                    b.HasOne("Server.Models.Realms.Realm", "Realm")
                        .WithMany("Avatars")
                        .HasForeignKey("RealmId");

                    b.HasOne("Server.Models.Users.User", "User")
                        .WithMany("Avatars")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Server.Models.Users.Message", b =>
                {
                    b.HasOne("Server.Models.Users.User", "Recipient")
                        .WithMany("MessagesRecieved")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Server.Models.Users.User", "Sender")
                        .WithMany("MessagesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Server.Models.Users.Photo", b =>
                {
                    b.HasOne("Server.Models.Users.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
